Join: // done
    Wine (with WineOrigin):
		SELECT b.*, a.wineTaste1, a.wineTaste2 FROM WineA AS a JOIN WineB AS b ON a.grapeType1 = b.grapeType1 AND a.grapeType2 = b.grapeType2 AND a.brandName = b.brandName LEFT JOIN WineOrigin AS o ON b.wineID = o.wineID;

	Supplier:
		SELECT a.name, b.* FROM SupplierA AS a INNER JOIN SupplierB AS b ON a.address = b.address;

	StoredIn (with Wine Names):
		SELECT w.brandName, s.* FROM WineB AS w INNER JOIN StoredIn AS s ON w.wineID = s.wineID;

	Agricultural Region (with WineID): 
		SELECT w.wineID, a.* FROM WineOrigin AS w INNER JOIN AgriculturalRegion AS a ON w.regionName = a.name;

	Restock (with Supplier Names and Employee ID/Names):
		SELECT r.employeeID, e.name, r.supplierID, s.name, r.wineID, r.locationID, r.quantity, r.restockDate 
		FROM Restock AS r
		INNER JOIN Employee AS e
				ON r.employeeID = e.employeeID
		INNER JOIN
		(SELECT SupplierA.name, SupplierB.supplierID FROM SupplierA INNER JOIN SupplierB ON SupplierA.address = SupplierB.address) AS s
					ON r.supplierID = s.supplierID;

	StorageArea:
		SELECT * FROM StorageArea;

Selection:
	SELECT locationID
	FROM storedIn
	WHERE wineID = <>; // done (as input)

Projection:
	SELECT brandName, wineTaste1, wineTaste2
	FROM winea
	WHERE wineTaste1 = <> OR wineTaste2 = <>; // done

    SELECT brandName, grapeType1, grapeType2
	FROM winea
	WHERE grapeType1 = <> OR grapeType2 = <>; //done

	SELECT price
	FROM wineb
	WHERE wineID = <>; // done (as input)

Aggregation:
	SELECT wineID, brandName, grapeType1, grapeType2, price
                FROM WineB AS p
                INNER JOIN
                ( SELECT MAX(price) AS max FROM WineB ) AS m
                ON p.price = m.max //done SF

Nested Aggregation with Group By:
	select w.brandName, w.grapeType1, w.grapeType2, w.price
    from
    (select brandName, grapeType1, grapeType2, price from wineb where brandName = '$brandName') w
    INNER JOIN
    (SELECT brandName, MIN(price) AS min from wineb GROUP BY brandName) m
    ON w.brandName = m.brandName AND w.price = m.min; //done

Division:
	-To identify top 10 wines where every retailer has ordered //TODO... actually orders/shipment stuff...


Examples of queries that the users would be able to perform include but are not limited to: //done
To create a list of expired wines and their locations //done
To determine the top supplier //done SF

Queries that would require input: //done
 - //done To count the number of types wines of specific attributes, such as alcohol % within a specific range, expiry date within a specific range, etc (requires input of attribute and range).
 - //done To find types of wines from regions with specific attributes, such as climate, moisture, etc (requires region attribute input).
